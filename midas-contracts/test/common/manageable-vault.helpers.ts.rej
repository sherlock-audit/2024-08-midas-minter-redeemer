diff a/midas-contracts/test/common/manageable-vault.helpers.ts b/midas-contracts/test/common/manageable-vault.helpers.ts	(rejected hunks)
@@ -1,6 +1,6 @@
 import { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';
 import { expect } from 'chai';
-import { BigNumberish } from 'ethers';
+import { BigNumber, BigNumberish } from 'ethers';
 import { parseUnits } from 'ethers/lib/utils';
 
 import { Account, OptionalCommonParams, getAccount } from './common.helpers';
@@ -399,3 +422,29 @@ export const withdrawTest = async (
   expect(balanceAfterContract).eq(balanceBeforeContract.sub(amount));
   expect(balanceAfterTo).eq(balanceBeforeTo.add(amount));
 };
+
+export const setMinBuidlToRedeem = async (
+  {
+    vault,
+    owner,
+  }: { vault: RedemptionVaultWIthBUIDL; owner: SignerWithAddress },
+  value: BigNumber,
+  opt?: OptionalCommonParams,
+) => {
+  if (opt?.revertMessage) {
+    await expect(
+      vault.connect(opt?.from ?? owner).setMinBuidlToRedeem(value),
+    ).revertedWith(opt?.revertMessage);
+    return;
+  }
+
+  await expect(
+    vault.connect(opt?.from ?? owner).setMinBuidlToRedeem(value),
+  ).to.emit(
+    vault,
+    vault.interface.events['SetMinBuidlToRedeem(uint256,address)'].name,
+  ).to.not.reverted;
+
+  const newMin = await vault.minBuidlToRedeem();
+  expect(newMin).eq(value);
+};
